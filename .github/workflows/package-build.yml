name: package build

on:
  push:
    branches:
    - master
    tags:
    - v*
  pull_request:
    branches:
    - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04]
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
    - name: build linux
      if: contains(matrix.os, 'ubuntu')
      run: |
        set -euo pipefail
        apt search libclang
        sudo apt install libclang-8-dev llvm-8 mesa-common-dev libgl1-mesa-dev
        mkdir llvm_symlink
        ln -s /usr/bin/llvm-config-8 llvm_symlink/llvm-config
        export PATH=`pwd`/llvm_symlink:$PATH
        dpkg -S /usr/bin/llvm-config-9
        echo $PATH
        llvm-config --version
        echo ------------
        make
        echo UPLOAD_FILE=cutter-deps-linux.tar.gz >> %GITHUB_ENV%
        echo UPLOAD_ASSET_TYPE=application/gzip >> %GITHUB_ENV%
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ env.UPLOAD_FILE }}
        path: ${{ env.UPLOAD_FILE }}
    - name: Get release
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      id: get_release
      uses: karliss/get-release@bee343636450eb2e9b85d9f1592d8d73c408dc74
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload release assets
      if: false && steps.get_release.outputs.upload_url != null
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ${{ env.UPLOAD_FILE }}
          asset_name: ${{ env.UPLOAD_FILE }}
          asset_content_type: ${{ env.UPLOAD_ASSET_TYPE }}